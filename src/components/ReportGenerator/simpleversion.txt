/**
 * so for now this component has two placeholder paragraphs
 * titled first notes at the beginning and additional notes at the end
 * i would like you to change this component so that instead of those
 * placeholder paragraphs in the preview there should be a button with a "+" 
 * on it and when the user presses it it should open an input for a title
 * and a input for the paragraph, then the user can input something and they should have
 * in the input mode two buttons to cancel and to submit, if they submit
 * the button should be replaced by the inputted title and paragraph
 * it should then, in the preview, show the inputted text but also allow the user to
 * edit it or delete it if they want
 * 
 * then when they press on the download report as pdf button if theres only + buttons,
 * meaning the user hasnt inputted anything it should just omit that part and if they've written anything
   it should display it nicely in the pdf
 */
import React, { useRef } from "react";
import {
  PieChart,
  Pie,
  Cell,
  BarChart,
  Bar,
  XAxis,
  YAxis,
  Tooltip,
  ResponsiveContainer,
} from "recharts";
import html2canvas from "html2canvas";
import jsPDF from "jspdf";
import logo from "../../assets/tc-report-logo.svg";
import "./ReportGenerator.scss";


const pieData = [
  { name: "Passed", value: 400 },
  { name: "Failed", value: 100 },
];

const barData = [
  { name: "Week 1", value: 200 },
  { name: "Week 2", value: 300 },
  { name: "Week 3", value: 150 },
];

const COLORS = ["#4caf50", "#f44336"];

const ReportGenerator = () => {
  const reportRef = useRef(null);

  const handleExportPDF = async () => {
    const element = reportRef.current;
    const canvas = await html2canvas(element, { scale: 2 });
    const imgData = canvas.toDataURL("image/png");

    const pdf = new jsPDF({
      orientation: "portrait",
      unit: "mm",
      format: "a4",
    });

    const pdfWidth = pdf.internal.pageSize.getWidth();
    const imgProps = pdf.getImageProperties(imgData);
    const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;

    pdf.addImage(imgData, "PNG", 0, 0, pdfWidth, pdfHeight);
    pdf.save(Quality_Report_${new Date().toISOString().slice(0, 10)}.pdf);
  };

  const currentDate = new Date().toLocaleDateString("en-US", {
    month: "long",
    year: "numeric",
  });

  return (
    <div className="report-wrapper">
      <div className="report-content" ref={reportRef}>
        <div className="report-header">
          <img src={logo} alt="Company Logo" className="report-logo" />
          <div className="report-title">
            <h2>Quality Report</h2>
            <p>{currentDate}</p>
          </div>
        </div>

        <div className="report-section">
          <h3>First Notes</h3>
          <p>
            Here the user is supposed to be able to decide if they want to add a
            title and text here or now, thereafter when its exported to pdf it
            should if theres text set in state include it and if not not include
            it but im not sure how to solve the ux of them clicking
          </p>
        </div>

        <div className="report-section">
          <h3>Quality Summary</h3>
          <ResponsiveContainer width="100%" height={250}>
            <PieChart>
              <Pie
                data={pieData}
                dataKey="value"
                nameKey="name"
                outerRadius={80}
                label
              >
                {pieData.map((entry, index) => (
                  <Cell
                    key={cell-${index}}
                    fill={COLORS[index % COLORS.length]}
                  />
                ))}
              </Pie>
              <Tooltip />
            </PieChart>
          </ResponsiveContainer>
        </div>

        <div className="report-section">
          <h3>Weekly Quality Overview</h3>
          <ResponsiveContainer width="100%" height={300}>
            <BarChart data={barData}>
              <XAxis dataKey="name" />
              <YAxis />
              <Tooltip />
              <Bar dataKey="value" fill="#2196f3" />
            </BarChart>
          </ResponsiveContainer>
        </div>

        <div className="report-section">
          <h3>Additional Notes</h3>
          <p>
            This month saw a consistent performance across all weeks. We
            recommend continuing the current quality assurance practices and
            reviewing the failed batch for further insights.
          </p>
        </div>
      </div>

      <div className="report-download-button">
        <button onClick={handleExportPDF}>Download Report as PDF</button>
      </div>
    </div>
  );
};

export default ReportGenerator;
